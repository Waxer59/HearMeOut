// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

// TODO: ACTIVE CHATS
// TODO: FRIEND REQUESTS
model User {
  id          String   @id @default(auto()) @map("_id") @db.ObjectId
  username    String   @unique
  password    String?
  avatar      String?
  githubId    String?  @unique
  groups      String[] @db.ObjectId
  adminGroups String[] @db.ObjectId
  chats       String[] @db.ObjectId

  messageFroms  Message[]      @relation("messageFroms")
  messageTos    Message[]      @relation("messageTos")
  grupsJoined   Group[]        @relation("groupsJoined", fields: [groups], references: [id])
  groupsAdmin   Group[]        @relation("groupsAdmin", fields: [adminGroups], references: [id])
  chatsJoined   Chat[]         @relation(fields: [chats], references: [id])
  configuration Configuration?
}

enum Theme {
  dark
  light
}

model Configuration {
  id     String @id @default(auto()) @map("_id") @db.ObjectId
  userId String @unique @db.ObjectId
  theme  Theme

  user User @relation(fields: [userId], references: [id])
}

model Message {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  fromId    String   @db.ObjectId
  toId      String   @db.ObjectId
  content   String
  viewed    Boolean  @default(false)
  createdAt DateTime
  replyId   String?  @db.ObjectId

  from          User      @relation("messageFroms", fields: [fromId], references: [id])
  to            User      @relation("messageTos", fields: [toId], references: [id])
  reply         Message?  @relation("messageReply", fields: [replyId], references: [id], onDelete: NoAction, onUpdate: NoAction)
  replies       Message[] @relation("messageReply")
  chatMessages  Chat[]
  groupMessages Group[]
}

model Group {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  name       String
  icon       String?
  creatorId  String   @db.ObjectId
  usersId    String[] @db.ObjectId
  messagesId String[] @db.ObjectId
  adminsId   String[] @db.ObjectId

  users    User[]  @relation("groupsJoined", fields: [usersId], references: [id])
  admins   User[]  @relation("groupsAdmin", fields: [adminsId], references: [id])
  messages Message @relation(fields: [messagesId], references: [id])
}

model Chat {
  id         String   @id @default(auto()) @map("_id") @db.ObjectId
  usersId    String[] @db.ObjectId
  messagesId String[] @db.ObjectId

  users    User[]  @relation(fields: [usersId], references: [id])
  messages Message @relation(fields: [messagesId], references: [id])
}
